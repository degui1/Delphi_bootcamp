unit Regras.Parametros;

interface

uses
  Regras.Interfaces, System.SysUtils;

type

  TRegraParametros = class(TInterfacedObject, iRegraParametros)
    private
      FParent : iRegra;
      FNome : String;
      FDisplay : TProc<String>;
      FPercentImposto : Currency;
    public
      constructor Create ( aParent : iRegra );
      destructor Destroy; override;
      class function New ( aParent : iRegra ) : iRegraParametros;
      function Nome : String; overload;
      function Nome ( aValue : String ) : iRegraParametros; overload;
      function Display ( aDisplay : TProc<String> ) : iRegraParametros; overload;
      function Display : TProc<String>; overload;
      function PercentImposto : Currency; overload;
      function PercentImposto ( aValue : Currency ) : iRegraParametros; overload;
  end;

implementation

{ TRegraParametros }

constructor TRegraParametros.Create(aParent: iRegra);
begin
  FParent := aParent;
end;

destructor TRegraParametros.Destroy;
begin

  inherited;
end;

function TRegraParametros.Display(aDisplay: TProc<String>): iRegraParametros;
begin
  Result := Self;
  FDisplay := aValue;
end;

function TRegraParametros.Display: TProc<String>;
begin
  Result := FDisplay;
end;

class function TRegraParametros.New(aParent: iRegra): iRegraParametros;
begin
  Result := Self.Create(aParent);
end;

function TRegraParametros.Nome(aValue: String): iRegraParametros;
begin
  Result := Self;
  FNome := aValue;
end;

function TRegraParametros.Nome: String;
begin
  Result := FNome;
end;

function TRegraParametros.PercentImposto: Currency;
begin
  Result := FPercentImposto;
end;

function TRegraParametros.PercentImposto(aValue: Currency): iRegraParametros;
begin
  Result := Self;
  FPercentImposto := aValue;
end;

end.
