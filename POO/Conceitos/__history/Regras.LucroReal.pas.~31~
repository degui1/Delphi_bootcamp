unit Regras.LucroReal;
interface
uses
  Regras.Interfaces, System.SysUtils, Regras.Operacoes;
type
  TRegraLucroReal = class(TInterfacedObject, iRegra)
    private
      FParametros : iRegraParametros;
      FOperacoes : iRegrasOperacoes;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iRegra;
      function Parametros : iRegraParametros;
      function Operacoes : iRegrasOperacoes;
  end;
implementation

uses
  Regras.Controller, Regras.Tipo, Regras.Parametros;
{ TRegraLucroPresumido }

constructor TRegraLucroReal.Create;
begin
  FParametros := TRegraParametros.New(Self);
  FParametros
    .Nome('Lucro Real')
    .PercentImposto(0.2);
end;

destructor TRegraLucroReal.Destroy;
begin

  inherited;
end;

class function TRegraLucroReal.New: iRegra;
begin
  Result := Self.Create;
end;

function TRegraLucroReal.Operacoes: iRegrasOperacoes;
begin
  if not Assigned(FOperacoes) then
    FOperacoes := TRegraOperacoes.New(Self);

  Result := FOperacoes;
end;

function TRegraLucroReal.Parametros: iRegraParametros;
begin
  if not Assigned(FParametros) then
    FParametros := TRegraParametros.New(Self);

  Result := FParametros;
end;

initialization
  TRegraController.New.Registry(Integer(trReal), 'Lucro Real');
end.
